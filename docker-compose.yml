services:
  mysql:
    build:
      context: ./
      dockerfile: db/mysql/dev/Dockerfile
    container_name: dunktomic_db
    restart: "no"
    environment:
      MYSQL_ROOT_PASSWORD: root_password
    expose:
      - 3306
    ports:
      - "3307:3306"
    healthcheck:
      test: mysql --user=root --password=$$MYSQL_ROOT_PASSWORD --silent --execute "use dunktomic_db"
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - dunktomic-network

  keycloak:
    build:
      context: ./
      dockerfile: keycloak/Dockerfile
    container_name: dunktomic_keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: change_me
      KC_HEALTH_ENABLED: true
    depends_on:
      mysql:
        condition: service_healthy
    expose:
      - 8080
      - 9000
    ports:
      - "8080:8080"
      - "9000:9000"
    healthcheck:
      #test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3" ]
      test: [
          "CMD-SHELL",
          'exec 3<>/dev/tcp/localhost/9000; echo -e "GET /health/ready HTTP/1.1\nhost: localhost:8080\n" >&3; timeout --preserve-status 1 cat <&3 | grep -m 1 status | grep -m 1 UP; ERROR=$?; exec 3<&-; exec 3>&-; exit $ERROR'
        ]
      start_period: 45s
      interval: 20s
      timeout: 5s
      retries: 5
    networks:
      - dunktomic-network
  
  backend:
    build:
      context: ./
      dockerfile: backend/deployment/Dockerfile
    container_name: dunktomic_backend
    expose:
      - 8081
    ports:
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - dunktomic-network

networks:
  dunktomic-network:
    driver: bridge